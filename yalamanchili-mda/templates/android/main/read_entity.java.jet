<java:format>
package ${$groupID}.android.${$package/@name}.${lower-case($class/@name)};

import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import ${$groupID}.android.HttpHelper;
import android.app.Activity;
import android.os.Bundle;
import android.widget.TextView;
import ${$groupID}.android.R;
import ${$groupID}.android.AsyncHttp;

public class Read${$class/@name} extends Activity {
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.${lower-case($class/@name)}_read);
			new AsyncHttp(this) {
			@Override
			protected void onResponse(String result) {
				load(result);
			}
		}.execute(getReadURL());

	}
	
	public void load(String xml) {
		${$class/@name} ${lower-case($class/@name)} = new ${$class/@name}();
			${lower-case($class/@name)} = (${$class/@name}) HttpHelper.xstream.fromXML(xml);
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
						TextView ${lower-case($attribute/@name)}_textview = (TextView) this.findViewById(R.id.${$class/@name}_${$attribute/@name});
						if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
						${lower-case($attribute/@name)}_textview.setText(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
						TextView ${lower-case($attribute/@name)}_textview = (TextView) this.findViewById(R.id.${$class/@name}_${$attribute/@name});
						if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
						${lower-case($attribute/@name)}_textview.setText(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
						TextView ${lower-case($attribute/@name)}_textview = (TextView) this.findViewById(R.id.${$class/@name}_${$attribute/@name});
						if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
						${lower-case($attribute/@name)}_textview.setText(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				</c:iterate>	

	}
	
	public String getReadURL() {
	Long id = getIntent().getLongExtra("id", new Long(1));
	return HttpHelper.baseURL + "${lower-case($class/@name)}/read/" + id;
	}
	

}
</java:format>