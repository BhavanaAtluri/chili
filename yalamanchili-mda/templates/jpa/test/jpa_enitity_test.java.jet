<java:format>
package ${$groupID}.entity.${$package/@name};

import static org.junit.Assert.assertEquals;
import info.yalamanchili.security.jpa.YUser;

import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.transaction.UserTransaction;

import net.sf.gilead.pojo.base.ILightEntity;
import net.sf.gilead.pojo.gwt.LightEntity;

import org.jboss.arquillian.api.Deployment;
import org.jboss.arquillian.junit.Arquillian;
import org.jboss.shrinkwrap.api.Archive;
import org.jboss.shrinkwrap.api.ShrinkWrap;
import org.jboss.shrinkwrap.api.asset.EmptyAsset;
import org.jboss.shrinkwrap.api.spec.WebArchive;
import org.junit.Test;
import org.junit.runner.RunWith;


@RunWith(Arquillian.class)
public class ${$class/@name}JPATest {

	@PersistenceContext
	EntityManager em;

	@Inject
	UserTransaction utx;
	
	@Deployment
	public static Archive<?> createDeployment() {
		return ShrinkWrap
				.create(WebArchive.class, "test.war")
				.addPackages(true, ${$class/@name}.class.getPackage(),
						LightEntity.class.getPackage(),
						ILightEntity.class.getPackage(),
						YUser.class.getPackage())
				.addManifestResource("test-persistence.xml", "persistence.xml")
				.addWebResource(EmptyAsset.INSTANCE, "beans.xml");
	}
	
	public void insertSampleData() throws Exception {
		// clear database
		utx.begin();
		em.joinTransaction();

		System.out.println("Clear Data...");
		em.createQuery("delete from ${$class/@name}").executeUpdate();

		// insert records
		System.out.println("Inserting records...");
		for (int i = 0; i < 3; i++) {
			${$class/@name} entity = new ${$class/@name}();
		//	entity.setName("test category" + i);
			em.persist(entity);
		}
		utx.commit();
	}
	
	@Test
	public void testInsert() throws Exception {
		insertSampleData();
		utx.begin();
		em.joinTransaction();
		System.out.println("Selecting (using JPQL)...");
		Query query = em.createQuery("from ${$class/@name}");
		System.out.println("Found 1111111111111111111111");
		assertEquals(query.getResultList().size(), 3);
		utx.commit();
	}
}
</java:format>