
<java:format>

<f:bundle basename="templates/resources/messages">

<c:setVariable select="$class/@xmi.id" var="classID"/>
<%--This is used to check for inhereritance --%>
<c:setVariable select="$class/@name" var="parentClass"/>
package <c:get select="$package/@name" />;
 
<java:importsLocation package="{$package/@name}"/>
import info.yalamanchili.gwt.ui.Position;
import info.yalamanchili.gwt.ui.UIElement;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.ManyToOne;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;

import net.sf.gilead.pojo.java5.LightEntity;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.hibernate.validator.Past;
import org.hibernate.validator.Range;
<%-- Check inheritance support--%>
<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Generalization" var="generalization">
 <%-- if parent class--%>
	<c:if test="$generalization/Generalization.parent/Class/@xmi.idref = $classID">
		<c:setVariable select="$generalization/Generalization.parent/Class/@xmi.idref" var="isParentClass"/>
	</c:if>
 <%-- if child class--%>
	<c:if test="$generalization/Generalization.child/Class/@xmi.idref = $classID">
		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="otherClass">
  			<c:if test="$otherClass/@xmi.id = $generalization/Generalization.parent/Class/@xmi.idref">
  			<c:setVariable select="$otherClass/@name" var="parentClass"/>
  			</c:if>
		</c:iterate>  					  		 			 
	</c:if>
</c:iterate>

<f:message>generated.comment</f:message>
<c:if test="$isParentClass = $classID">
@Inheritance(strategy=InheritanceType.SINGLE_TABLE)
</c:if> 

@Entity
public class <c:get select="$class/@name" />  <c:choose select="$parentClass" > <c:when test="$class/@name" > extends  LightEntity </c:when> <c:otherwise> extends <c:get select="$parentClass" /></c:otherwise>  </c:choose> implements Serializable{
/** @generated */
private static final long serialVersionUID = 1L;

<%-- if this is not a child class--%> 
 <c:choose select="$parentClass" > 
 	<c:when test="$class/@name" > <f:message>generated.comment</f:message>
	@Id
	protected Long id; 
	</c:when>
	 <c:otherwise> 
	 </c:otherwise> 
 </c:choose>

 


	<%-- basic data types attributes and Enumerations--%>
<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
<f:message>generated.comment</f:message>
	<c:iterate select="$attribute/ModelElement.stereotype/Stereotype" var="stereotype">
		<%-- If UIElement--%>
		<c:if test="$stereotype/@href = 'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F54'">
			<c:iterate select="$attribute/ModelElement.taggedValue" var="taggedvalue">
				<c:iterate select="$taggedvalue/TaggedValue" var="subtag">
				<%-- If POSITION TAG--%>
					<c:if test="$subtag/TaggedValue.type/TagDefinition/@href = 'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F76'">
					 
@UIElement(position = Position.<c:get select="$subtag/TaggedValue.dataValue" />)			
					</c:if>
				</c:iterate>
			</c:iterate>
		</c:if>
	</c:iterate>
	

	 <c:choose select="$attribute/StructuralFeature.type/DataType/@href" > <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4B'" > protected String </c:when> <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4C'" > protected Integer </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4E'" > protected Date </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4F'" >protected  Boolean </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4D'" > protected Long </c:when>
	 <c:otherwise> 
	 	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Enumeration" var="enumeration">
	 			<c:if test="$attribute/StructuralFeature.type/Enumeration/@xmi.idref = $enumeration/@xmi.id">
	 			@Enumerated(EnumType.STRING)
	 			protected  <c:get select="$enumeration/@name" /> 
	 			</c:if>
	 	</c:iterate>	
	 	  </c:otherwise>
</c:choose> 
<c:get select="$attribute/@name" />;

</c:iterate>



<%-- collections --%>
<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Association" var="association">

	<c:iterate select="$association/Association.connection" var="association_connection">
	
		<c:iterate select="$association_connection/AssociationEnd" var="association_connection_end">
			<c:setVariable select="$association_connection_end/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID" />
		<%-- check is the association is corresponding to the class  --%>
					<c:if test="$association_connection_end_classID = $classID"> 
  					   	<%-- iterate over the iterations ends  --%>
  					  	 <c:iterate select="$association_connection/AssociationEnd" var="association_connection_end2">
  					  	 <c:setVariable select="$association_connection_end2/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID2" />
  					  	 	<%-- get the end secondary end with other class  --%>
  					  		 	<c:if test="not($association_connection_end_classID2 = $classID)"> 
  					  		 	<%-- iterate throught all the classes to get the other class on the association--%>
  					  		 		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="class2">
  					  		 			<c:if test="$class2/@xmi.id = $association_connection_end_classID2"> 
  					  		 			
  <f:message>generated.comment</f:message>					  		 			
  					  		 			<%-- This processes the JPA realations @OneToMany, @ManyToMany, @OneToOne etc--%>
  					  		 			<%-- check if the multiplicityis one to one--%>
  					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
  					    						<%--check the relations--%>
  					    							<%-- Composite @ManyToOne--%>
  					    							
  					    							<c:if test="$association_connection_end2/@aggregation = 'composite'">
 @ManyToOne 					    							
  					    							</c:if>  
  					    							<%-- Aggregate @ManyToOne--%>
  					    							<c:if test="$association_connection_end2/@aggregation = 'aggregate'">
 @ManyToOne 					    							
  					    							</c:if> 
 													<%-- Association OneToOne or OneToMany--%>
   					    							<c:if test="$association_connection_end2/@aggregation = 'none'">
  					    								<%-- check for one or many realations--%>
  					    								<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    									<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
 @OneToOne 					    				
				    										</c:if>
				    									</c:if>
  					    								<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    									<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
 @ManyToOne 					    				
				    										</c:if>
				    									</c:if>		    							
  					    							</c:if> 
 										
 protected 	<c:get select="$class2/@name" />  <c:get select="$association_connection_end2/@name" />;
  					  		 					</c:if>  
  					  		 			</c:if>
  										 <%-- check if the multiplicityis one to many--%>
   					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
   					    						<%--check the relations--%>
  					    							<%-- Composite @ManyToOne--%>
  					    							
  					    							<c:if test="$association_connection_end/@aggregation = 'composite'">
 @OneToMany(mappedBy="<c:get select="$association_connection_end/@name" />", cascade = CascadeType.ALL)					    							
  					    							</c:if>  
  					    							<%-- Aggregate @ManyToOne--%>
  					    							<c:if test="$association_connection_end/@aggregation = 'aggregate'">
 @OneToMany(mappedBy="<c:get select="$association_connection_end/@name" />")			    							
  					    							</c:if> 
  					    							<%-- Association OneToOne or OneToMany--%>
   					    							<c:if test="$association_connection_end/@aggregation = 'none'">
  					    								<%-- check for one or many realations--%>
  					    								<c:if test="$association_connection_end/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    									<c:if test="$association_connection_end/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
 @OneToMany (mappedBy="<c:get select="$association_connection_end/@name" />")				    				
				    										</c:if>
				    									</c:if>
  					    								<c:if test="$association_connection_end/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    									<c:if test="$association_connection_end/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
 @ManyToMany 					    				
				    										</c:if>
				    									</c:if>		    							
  					    							</c:if> 
				    											    									    						
 protected 	List<<c:get select="$class2/@name" />>  <c:get select="$association_connection_end2/@name" />;
  					  		 					</c:if>  
  					  		 			</c:if>
  					  		 			</c:if> 
  					  		 		</c:iterate>
  							  	</c:if> 
  					 	  </c:iterate> 					 	 				 	  
					</c:if> 											
		</c:iterate>
	</c:iterate>
</c:iterate>

<%-- constructor --%>
<f:message>generated.comment</f:message>
public <c:get select="$class/@name" />() {
super();   
}

<%-- getters and setters --%>
<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
	<%--getters for basic attributes --%>
	<f:message>generated.comment</f:message>
	protected  <c:choose select="$attribute/StructuralFeature.type/DataType/@href" > <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4B'" > String </c:when> <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4C'" > Integer </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4E'" > Date </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4F'" > Boolean </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4D'" > Long </c:when> <c:otherwise> 
	 	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Enumeration" var="enumeration">
	 			<c:if test="$attribute/StructuralFeature.type/Enumeration/@xmi.idref = $enumeration/@xmi.id">
	 			 <c:get select="$enumeration/@name" /> 
	 			</c:if>
	 	</c:iterate>	
	 	  </c:otherwise> </c:choose> get<c:get select="uppercaseFirst($attribute/@name)" />(){
	return <c:get select="$attribute/@name" />;
	}
	<f:message>generated.comment</f:message>
	protected void set<c:get select="uppercaseFirst($attribute/@name)" />(<c:choose select="$attribute/StructuralFeature.type/DataType/@href" > <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4B'" > String </c:when> <c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4C'" > Integer </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4E'" > Date </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4F'" > Boolean </c:when><c:when test="'http://argouml.org/user-profiles/YalamanchiliMDAProfile.xmi#-91--119--6-96-66633a6:124dff5068f:-8000:0000000000000F4D'" > Long </c:when><c:otherwise> 
	 	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Enumeration" var="enumeration">
	 			<c:if test="$attribute/StructuralFeature.type/Enumeration/@xmi.idref = $enumeration/@xmi.id">
	 			 <c:get select="$enumeration/@name" /> 
	 			</c:if>
	 	</c:iterate>	
	 	  </c:otherwise> </c:choose> <c:get select="$attribute/@name" />){
	this.<c:get select="$attribute/@name" />=<c:get select="$attribute/@name" />;
	}
	
</c:iterate>
<%-- colletions getters and setters-->
<%--getters for collection attributes --%>
	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Association" var="association">
	<c:iterate select="$association/Association.connection" var="association_connection">
	
		<c:iterate select="$association_connection/AssociationEnd" var="association_connection_end">
			<c:setVariable select="$association_connection_end/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID" />
		<%-- check is the association is corresponding to the class  --%>
					<c:if test="$association_connection_end_classID = $classID"> 
  					   	<%-- iterate over the iterations ends  --%>
  					  	 <c:iterate select="$association_connection/AssociationEnd" var="association_connection_end2">
  					  	 <c:setVariable select="$association_connection_end2/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID2" />
  					  	 	<%-- get the end secondary end with other class  --%>
  					  		 	<c:if test="not($association_connection_end_classID2 = $classID)"> 
  					  		 	<%-- iterate throught all the classes to get the other class on the association--%>
  					  		 		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="class2">
  					  		 			<c:if test="$class2/@xmi.id = $association_connection_end_classID2"> 
  					  		 			
  					  		 			
  					  		 			<%-- This processes the JPA realations @OneToMany, @ManyToMany, @OneToOne etc--%>
  					  		 			<%-- check if the multiplicityis one to one--%>
  					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
<f:message>generated.comment</f:message>
 													
 protected 	<c:get select="$class2/@name" /> get<c:get select="$class2/@name" />() {
 return  this.<c:get select="$association_connection_end2/@name" />;
 }
<f:message>generated.comment</f:message>
  protected 	void set<c:get select="$class2/@name" />(<c:get select="$class2/@name" /> <c:get select="$association_connection_end2/@name" />) {
   this.<c:get select="$association_connection_end2/@name" />=<c:get select="$association_connection_end2/@name" />;
 }
  					  		 					</c:if>  
  					  		 			</c:if>
  										 <%-- check if the multiplicityis one to many--%>
   					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
   					    						
  <f:message>generated.comment</f:message>				    											    									    						
 protected 	List<<c:get select="$class2/@name" />>  get<c:get select="$class2/@name" />s(){
 return this.<c:get select="$association_connection_end2/@name" />;
 }
<f:message>generated.comment</f:message>
 protected 	  void set<c:get select="$class2/@name" />(List<<c:get select="$class2/@name" />> <c:get select="$association_connection_end2/@name" />){
 this.<c:get select="$association_connection_end2/@name" />=<c:get select="$association_connection_end2/@name" />;
 }
  					  		 					</c:if>  
  					  		 			</c:if>
  					  		 			</c:if> 
  					  		 		</c:iterate>
  							  	</c:if> 
  					 	  </c:iterate> 					 	 				 	  
					</c:if> 											
		</c:iterate>
	</c:iterate>

</c:iterate>


}
</f:bundle>
</java:format>