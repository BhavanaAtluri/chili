<java:format>
package ${$packageName}.${lower-case($class/@name)};

import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import ${$webPackage}${camelCase($projectName)}Welcome;
import info.yalamanchili.gwt.rpc.GenericCRUDService.GenericCRUDServiceAsync;
import ${$groupID}.client.${$package/@name}.${lower-case($class/@name)}.ReadAll${$class/@name}sPanel.${$class/@name}TableType;
import info.yalamanchili.gwt.callback.ALAsyncCallback;
import info.yalamanchili.gwt.composite.SearchPanelCompositeGeneric;
import com.google.gwt.user.client.ui.DockPanel;
import java.util.List;


public class ${$class/@name}SearchPanelGeneric extends
		SearchPanelCompositeGeneric<${$class/@name}> {
	public ${$class/@name} ${lower-case($class/@name)};
	private static ${$class/@name}SearchPanelGeneric instance;

	public static ${$class/@name}SearchPanelGeneric instance() {
		return instance;
	}

	public ${$class/@name}SearchPanelGeneric() {
		instance = this;
		initSearchPanelCompositeGeneric(new ${$class/@name}(), ${camelCase($projectName)}Welcome.constants);
	}

	@Override
	protected void addListeners() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void addWidgets() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void configure() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void postInit() {
	
	<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
		<c:if test="$attribute/StructuralFeature.type/DataType/@href = ${'$StringID'}">
		GenericCRUDServiceAsync.instance().getSuggestionsForName("${$attribute/@name}",
				new ${$class/@name}(), new ALAsyncCallback<List<String>>() {

					@Override
					public void onResponse(List<String> values) {
						addSuggestBox("${upper-case($attribute/@name)}", values);

					}

				});
		</c:if>		
	</c:iterate>
	
	}

	@Override
	protected void postValidate() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void searchButtonClicked(${$class/@name} entity) {
		${lower-case($class/@name)} = entity;
		${camelCase($projectName)}Welcome.instance().getEntityPanel().clear();
		${camelCase($projectName)}Welcome.instance().getEntityPanel().add(
				(new ReadAll${$class/@name}sPanel(${$class/@name}TableType.READALL_SEARCH)));

	}

}
</java:format>