<java:format>
package ${$packageName}.${lower-case($class/@name)};
<c:if test="$enableHibernateSearch = 'true'">
import info.yalamanchili.gwt.widgets.FindWidget;
import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import info.yalamanchili.gwt.callback.ALAsyncCallback;
import java.util.List;
</c:if>	

import ${$webPackage}${camelCase($projectName)}Welcome;
import ${$webPackage}Roles;
import ${$groupID}.client.${$package/@name}.${lower-case($class/@name)}.ReadAll${$class/@name}sPanel.${$class/@name}TableType;

import info.yalamanchili.gwt.composite.SideBarComposite;
import info.yalamanchili.gwt.widgets.ClickableLink;

import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.logical.shared.CloseEvent;
import com.google.gwt.event.logical.shared.OpenEvent;
import com.google.gwt.user.client.ui.DisclosurePanel;
import com.google.gwt.user.client.ui.LazyPanel;
import com.google.gwt.user.client.ui.Widget;
import info.yalamanchili.gwt.composite.CreateComposite.CreateCompositeType;

public class ${$class/@name}SideBar extends SideBarComposite {
	private static ${$class/@name}SideBar ${lower-case($class/@name)}SideBar;

	public static ${$class/@name}SideBar instance() {
		return ${lower-case($class/@name)}SideBar;
	}

	ClickableLink createLink = new ClickableLink("Create ${$class/@name}");
<c:if test="$enableHibernateSearch = 'true'">
	FindWidget findWidget = new FindWidget(this);
</c:if>		
	
	private static class ${$class/@name}LazySearchPanel extends LazyPanel {
		@Override
		protected Widget createWidget() {
			return new ${$class/@name}SearchPanelGeneric();
		}
	}
	
	${$class/@name}LazySearchPanel ${lower-case($class/@name)}LazySearchPanel = new ${$class/@name}LazySearchPanel();
	
	public ${$class/@name}SideBar() {
		${lower-case($class/@name)}SideBar = this;
		initSideBarComposite();
	}

	@Override
	protected void addListeners() {
		createLink.addClickHandler(this);
	}

	@Override
	protected void configure() {
		panel.addStyleName("${$class/@name}SidePanel");
	}

	@Override
	protected void addWidgets() {
			panel.add(createLink);
			panel.add(findWidget);	
	}

	@Override
	public void onClick(ClickEvent event) {
		if (event.getSource() == createLink) {
			createLinkClicked();
		}
<c:if test="$enableHibernateSearch = 'true'">
		if (event.getSource() == findWidget.getFindButton()) {
			${$packageName}.${lower-case($class/@name)}.${$class/@name}Service.${$class/@name}ServiceAsync.instance().search(findWidget.getSearchText(),
							new ALAsyncCallback<List<${$class/@name}>>() {
								@Override
								public void onResponse(List<${$class/@name}> arg0) {
								${camelCase($projectName)}Welcome.instance().getEntityPanel().clear();
									${camelCase($projectName)}Welcome.instance().getEntityPanel()
											.add((new ReadAll${$class/@name}sPanel(arg0)));
								}

							});
		}	
</c:if>			
	
	}


	protected void createLinkClicked() {
		${camelCase($projectName)}Welcome.instance().getEntityPanel().clear();
		${camelCase($projectName)}Welcome.instance().getEntityPanel().add(
				new Create${$class/@name}Panel(CreateCompositeType.CREATE));
	}

	protected void reload${$class/@name}() {
		
	}

	@Override
	public void onSearchClose(CloseEvent<DisclosurePanel> arg0) {
		searchPanel.remove(${lower-case($class/@name)}LazySearchPanel);
	}

	@Override
	public void onSearchOpen(OpenEvent<DisclosurePanel> arg0) {
		searchPanel.add(${lower-case($class/@name)}LazySearchPanel);
		${lower-case($class/@name)}LazySearchPanel.setVisible(true);
	}
}
</java:format>
