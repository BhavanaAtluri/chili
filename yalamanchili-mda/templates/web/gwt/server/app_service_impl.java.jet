<java:format>
package ${$groupID}.server;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import javax.persistence.EntityManager;
import org.jboss.seam.security.management.IdentityManager;
import org.jboss.seam.annotations.Create;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.remoting.WebRemote;
import org.jboss.seam.security.Identity;
import ${$groupID}.entity.security.Role;
import ${$groupID}.entity.security.User;


import javax.persistence.Query;

@Name("${$webPackage}rpc.${camelCase($projectName)}Service")
public class ${camelCase($projectName)}ServiceImpl implements ${$webPackage}rpc.${camelCase($projectName)}Service {

	@In(create = true)
	protected EntityManager em;
	
	 @In(create = true)
	 protected IdentityManager identityManager;
	 
	 @In(create = true)
	Identity identity;
	
	@Override
	@WebRemote
	public String login(String username, String password) {
		if (identityManager.authenticate(username, password)) {
			Query getUser = em
					.createQuery("from User where username=:username");
			getUser.setParameter("username", username);
			User user = (User) getUser.getSingleResult();
			identity.getCredentials().setUsername(user.getUsername());
			identity.getCredentials().setPassword(user.getPasswordHash());
			for (Role role : user.getRoles()) {
				identity.addRole(role.getRolename());
			}
			identity.login();
			return "success";
		} else {
			return "failed";
		}
	}
	
	@Override
	@WebRemote
	public Boolean createUser(String username, String password) {
		User user = new User();
		user.setUsername(username);
		Role role = new Role();
		role.setRolename("user");
		user.addRole(role);
		user.setPasswordHash(password);
		em.persist(user);
		return true;
	}
	
	@Override
	@WebRemote
	public void logout() {
		identity.logout();
	}
}
</java:format>
