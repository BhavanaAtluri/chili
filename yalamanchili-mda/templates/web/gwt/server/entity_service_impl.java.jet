<java:format>
package ${$groupID}.server;


import java.util.HashMap;
import java.util.Properties;

import javax.ejb.EJB;


import ${$groupID}.ejb.GenericServiceLocal;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


import ${$groupID}.ejb.${$package/@name}.${lower-case($class/@name)}.${$class/@name}ServiceLocal;
import ${$groupID}.entity.${$package/@name}.${$class/@name};

import java.io.Serializable;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.jboss.seam.annotations.Create;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.remoting.WebRemote;
import info.yalamanchili.gwt.beans.TableObj;
import org.jboss.seam.annotations.remoting.WebRemote;

@Name("${$packageName}.${lower-case($class/@name)}.${$class/@name}Service")
public class ${$class/@name}ServiceImpl implements ${$packageName}.${lower-case($class/@name)}.${$class/@name}Service {


	@In(create = true)
	protected GenericServiceLocal genericServiceBean;

	@In(create = true)
	protected ${$class/@name}ServiceLocal ${lower-case($class/@name)}ServiceBean;
	
	@Override
	@WebRemote
	public ${$class/@name} create(${$class/@name} entity) {
		return ${lower-case($class/@name)}ServiceBean.create(entity);
	}

	@Override
	@WebRemote
	public void delete(${$class/@name} entity) {
		// TODO Auto-generated method stub

	}

	@Override
	@WebRemote
	public TableObj<${$class/@name}> getTableObj( int start) {
		return ${lower-case($class/@name)}ServiceBean.getTableObj( start);
	}

	@Override
	@WebRemote
	public ${$class/@name} read( Long id) {
		return ${lower-case($class/@name)}ServiceBean.read(id);
	}

	@Override
	@WebRemote
	public ${$class/@name} update(${$class/@name} entity) {
		return ${lower-case($class/@name)}ServiceBean.update(entity);
	}
	
	@Override
	@WebRemote
	public <T extends Serializable> void addAll(T parent, T child,
			List<Long> children) {
		${lower-case($class/@name)}ServiceBean.addAll(parent, child, children);
	}

	@Override
	@WebRemote
	public <T extends Serializable> List<${$class/@name}> getEntities(${$class/@name} entity) {
		return ${lower-case($class/@name)}ServiceBean.getEntities(entity);
	}

	@Override
	@WebRemote
	public <T extends Serializable> Map<Long, String> getListBoxValues(
			T entity, String[] columns) {
		return ${lower-case($class/@name)}ServiceBean.getListBoxValues(columns);
	}

	@Override
	@WebRemote
	public <T extends Serializable> List<T> getRelatedEntities(Long entityID,
			String sourceClass, T target) {
		return genericServiceBean.getRelatedEntities(entityID, ${$class/@name}.class,
				target);
	}

	@Override
	@WebRemote
	public List<String> getSuggestionsForName(String name, ${$class/@name} entity) {
		return genericServiceBean.getSuggestionsForName(name, entity);
	}
	
	@Override
	@WebRemote
	public <T extends Serializable> void merge(${$class/@name} entity, T child) {
		 ${lower-case($class/@name)}ServiceBean.merge(entity, child);
	}
	
	
}
</java:format>
